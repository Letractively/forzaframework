<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
        "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<book>

    <bookinfo>
        <title>Reference Documentation</title>
        <subtitle>Forza Framework</subtitle>
        <productname>Forza Framework</productname>
        <releaseinfo>1.0.0 Beta 1</releaseinfo>
<!--        <authorgroup>
            <author>
                <firstname>Cesar</firstname>
                <surname>Reyes</surname>
            </author>
            <author>
                <firstname>Gabriel</firstname>
                <surname>Chulim</surname>
            </author>
            <author>
                <firstname>Elvira</firstname>
                <surname>Aranda</surname>
            </author>
            <author>
                <firstname>Christian</firstname>
                <surname>Tavera</surname>
            </author>
        </authorgroup>-->
        <copyright>
            <year>2004-2009</year>
            <holder>Nopalsoft</holder>
        </copyright>
        <legalnotice>
            <para>Copies of this document may be made for your own use and for
                distribution to others, provided that you do not charge any
                fee for such copies and further provided that each copy
                contains this Copyright Notice, whether distributed in print
                or electronically.
            </para>
        </legalnotice>

    </bookinfo>
    <toc/>

    <chapter id="intro">
        <title>Introduction</title>
        <para>La meta de Forza Framework es facilitar el desarrollo de aplicaciones java empresariales con una robusta capa de acceso a datos, varias mejoras al Spring MVC Framework, una taglib jsp completo que renderea javascript/ajax widgets, una estructura base para una aplicacion web, un generador de codigo incremental para el trabajo tedioso, todo esto ayudanto a reducir considerablemente el tiempo de desarrollo.</para>
        <para>Como es la ideologia de Spring Framework en Forza Framework tratamos de que el usuario pueda escojer que usar del framework y solo eso use, sin necesidad de tener que usar todo el stack (dao, service, mvc, taglib, security).</para>
    </chapter>

    <chapter>
        <title>Core</title>
        <para>Binders, Validaciones, Persistencia, Envio de Mails, Log</para>
    </chapter>

    <chapter id="dal">
        <title>Capa de Acceso a Datos</title>
        <para>Forza provee de varias herramientas para simplificar el acceso a datos</para>

        <section>
            <title>EntityManager</title>
            <para>Encapsula el acceso a datos</para>
            <para>Una de las ventajas de usar el EntityManager es que el codigo no esta atado a una implementacion de acceso a datos, permitiendo que podamos para de usar Hibernate u otro framework ORM sin necesidad de cambiar nuestro codigo. Por ahora solo existe una implementacion del EntityManager que es la implementacion para Hibernate.</para>
        </section>

        <section>
            <title>Criteria API</title>
            <para>La idea de esto es que podamos usar el api en cualquier lugar de nuestra aplicacion sin usar directamente el Criteria API de Hibernate</para>
        </section>
    </chapter>

    <chapter id="servicelayer">
        <title>Capa de Servicios</title>
        <para>Trabajando...</para>

        <section>
            <title>Transacciones</title>
            <para></para>
        </section>
    </chapter>

    <chapter>
        <title>Web</title>

        <section>
            <title>AnnotationMethodHandlerAdapter</title>
            <para>Forza provee una implementacion alternativa a la default de spring, esta contiene funcionalidad para hacer un poco mas simples las cosas.</para>

            <programlisting lang="xml"><![CDATA[<bean class="org.forzaframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
    <property name="cacheSeconds" value="0"/>
    <property name="entityManager" ref="entityManager"/>
    <property name="systemConfiguration" ref="systemConfiguration"/>
    <!--<property name="dateFormat" value="dd/MM/yyyy"/>-->
    <property name="validators">
        <list>
            <ref bean="beanValidator"/>
        </list>
    </property>
    <property name="customModelAndViewResolver">
        <bean class="org.forzaframework.web.servlet.mvc.annotation.MessageResponseResolver"/>
    </property>
    <property name="webBindingInitializer">
        <bean class="org.forzaframework.web.BaseBindingInitializer" />
    </property>
</bean>]]>
            </programlisting>

            <section>
                <title>MessageResponseResolver</title>
                <para>
                    En caso de que nuestro handler este anotado con @ResponseType si existe una exception esta se capturara y se mostrara en el formato definido.
                    <interfacename>@ResponseType</interfacename> recibe como argumento opcional el tipo de response que se quiere, de inicio son dos JSON y XML.
                </para>
            </section>
            <section>
                <title>EntityManager</title>
                <para>La interaccion que tiene <classname>AnnotationMethodHandlerAdapter</classname> con el EntityManager es para que cuando exista un parametro anotado con @ModelAtribute este lo cargue de la base de datos
                via <classname>EntityManager</classname>. Esto nos va a permitir mayor comodidad al tratar con colecciones dentro de nuestro modelo.</para>
            </section>
            <section>
                <title>Validators</title>
                <para></para>
            </section>
        </section>
        <para>Web Binders, BaseControllers, Views (text, csv, xml, jasperreports), ResponseTypes</para>
        <para>Edicion de catalogos, persistencia automatica</para>
    </chapter>

    <chapter>
        <title>Seguridad</title>
        <para>Implementacion de clases para hacer un poco mas facil la seguridad que provee Spring Security</para>

        <section>
            <title>UserManager</title>
            <para>Se encarga de traer a los usuarios de la base de datos</para>
        </section>
        <para>SmartGroups?</para>
    </chapter>

    <chapter id="taglib">
        <title>Taglib</title>
        <para>Todos los componentes ext.</para>

        <section>
            <title>Configuracion</title>
            <para></para>
        </section>

        <section>
            <title>Ejemplos</title>
            <para></para>

            <section>
                <title><![CDATA[
                <n:panel/> Panel Tag
                ]]></title>
                                                    
                <para>El PanelTag emula la funcionalidad del Ext.Panel</para>
            </section>

            <para>DataViewTag, GridTag, PanelTag, WindowTag, LayoutTag, TabsTag, PortletTag, FormTag, ToolbarTag, ViewportTag, ButtonTag, ColumnTag, EditableGridTag, etc...</para>
        </section>
        <programlisting lang="xml"><![CDATA[
<n:panel layout="border" title="Titulo principal del modulo" replacePanel="System.getCenter()">
<n:toolbar type="top">
<n:button text="Abrir ventana" handler="function(){ Ext.getCmp('window').show(); }"/>
</n:toolbar>
<n:panel region="west" title="West" width="200">
</n:panel>
<n:panel region="center" layout="row-fit">
<n:grid id="users-grid" titleKey="user.list.title" url="${ctx}/config/users/xml">
<n:toolbar type="top">
<n:button textKey="user.new" handler="function(){
alert('Hola mundo')
}" />
<n:button text="Permisos" handler="alert('Hola mundo');" />
</n:toolbar>

<n:column field="id" hidden="true"/>
<n:column field="username" titleKey="user.username"/>
<n:column field="firstName" titleKey="user.firstName"/>
<n:column field="lastName" titleKey="user.lastName"/>
<n:column field="email" titleKey="user.email"/>
<n:column field="preferredLocale" titleKey="user.preferredLocale"/>
</n:grid>
<n:panel title="Aqui puede ir un otro grid">

</n:panel>
</n:panel>
</n:panel>
	]]></programlisting>
        <section>
            <title>Trabajando con ajax</title>
            <para>Trabajando...</para>
        </section>
        <section>
            <title>Trabajando con javascript</title>
            <para>Trabajando...</para>
        </section>
    </chapter>

    <chapter>
        <title>Generador de Codigo</title>
        <para>Trabajando...</para>
    </chapter>

</book>