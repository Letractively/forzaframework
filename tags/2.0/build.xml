<project name="Build" basedir="." default="help">

    <property name="name" value="forzaframework"/>

    <property name="core.src.dir" value="core"/>
    <property name="corehibernate.src.dir" value="core.hibernate"/>
    <property name="coreweb.src.dir" value="core.web"/>
    <property name="security.src.dir" value="security"/>
    <property name="taglib.src.dir" value="taglib"/>
    <property name="test.src" value="src/test/java"/>
    <property name="build.dir" value="out/production"/>
    <property name="dist.dir" value="dist"/>
    <property name="test.dir" value="${build.dir}/test"/>
    <property name="build.java.version" value="1.5"/>

    <target name="help">
        <echo message=""/>
        <echo message="${name} build file"/>
        <echo message="-----------------------------------"/>
        <echo message=""/>
        <echo message="Available targets are:"/>
        <echo message=""/>
        <echo message="compile      --> Compile all Java files"/>
        <echo message="test         --> Runs JUnit tests"/>
    </target>

    <target name="compile" description="Compile main source tree java files">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/${core.src.dir}"/>
        <mkdir dir="${build.dir}/${corehibernate.src.dir}"/>
        <mkdir dir="${build.dir}/${coreweb.src.dir}"/>
        <mkdir dir="${build.dir}/${security.src.dir}"/>
        <mkdir dir="${build.dir}/${taglib.src.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}/js"/>

        <javac destdir="${build.dir}/${core.src.dir}" debug="true" optimize="false"
               deprecation="false" failonerror="true" source="${build.java.version}" target="${build.java.version}">
            <src path="${core.src.dir}"/>
            <classpath>
                <fileset dir="lib" includes="*.jar"/>
            </classpath>
        </javac>
        <copy todir="${build.dir}/${core.src.dir}">
            <fileset dir="${core.src.dir}" includes="**/*.xml"/>
        </copy>
        <jar destfile="${dist.dir}/org.forzaframework.core.jar" basedir="${build.dir}/${core.src.dir}"/>

        <javac destdir="${build.dir}/${corehibernate.src.dir}" debug="true" optimize="false"
               deprecation="false" failonerror="true" source="${build.java.version}" target="${build.java.version}">
            <src path="${corehibernate.src.dir}"/>
            <classpath>
                <fileset dir="lib" includes="*.jar"/>
                <pathelement path="${dist.dir}/org.forzaframework.core.jar"/>
            </classpath>
        </javac>
        <copy todir="${build.dir}/${corehibernate.src.dir}">
            <fileset dir="${corehibernate.src.dir}" includes="**/*.xml"/>
            <fileset dir="${corehibernate.src.dir}" includes="**/*.properties"/>
        </copy>
        <jar destfile="${dist.dir}/org.forzaframework.core.hibernate.jar"
             basedir="${build.dir}/${corehibernate.src.dir}"/>

        <javac destdir="${build.dir}/${security.src.dir}" debug="true" optimize="false"
               deprecation="false" failonerror="true" source="${build.java.version}" target="${build.java.version}">
            <src path="${security.src.dir}"/>
            <classpath>
                <fileset dir="lib" includes="*.jar"/>
                <pathelement path="${dist.dir}/org.forzaframework.core.jar"/>
                <pathelement path="${dist.dir}/org.forzaframework.core.hibernate.jar"/>
            </classpath>
        </javac>
        <copy todir="${build.dir}/${security.src.dir}">
            <fileset dir="${security.src.dir}" includes="**/*.xml"/>
            <fileset dir="${security.src.dir}" includes="**/*.properties"/>
        </copy>
        <jar destfile="${dist.dir}/org.forzaframework.security.jar" basedir="${build.dir}/${security.src.dir}"/>

        <javac destdir="${build.dir}/${coreweb.src.dir}" debug="true" optimize="false"
               deprecation="false" failonerror="true" source="${build.java.version}" target="${build.java.version}">
            <src path="${coreweb.src.dir}"/>
            <classpath>
                <fileset dir="lib" includes="*.jar"/>
                <pathelement path="${dist.dir}/org.forzaframework.core.jar"/>
                <pathelement path="${dist.dir}/org.forzaframework.core.hibernate.jar"/>
                <pathelement path="${dist.dir}/org.forzaframework.security.jar"/>
            </classpath>
        </javac>
        <copy todir="${build.dir}/${coreweb.src.dir}">
            <fileset dir="${coreweb.src.dir}" includes="**/*.xml"/>
            <fileset dir="${coreweb.src.dir}" includes="**/*.properties"/>
        </copy>
        <jar destfile="${dist.dir}/org.forzaframework.web.jar" basedir="${build.dir}/${coreweb.src.dir}"/>

        <javac destdir="${build.dir}/${taglib.src.dir}" debug="true" optimize="false"
               deprecation="false" failonerror="true" source="${build.java.version}" target="${build.java.version}">
            <src path="${taglib.src.dir}"/>
            <classpath>
                <fileset dir="lib" includes="*.jar"/>
                <pathelement path="${dist.dir}/org.forzaframework.core.jar"/>
                <pathelement path="${dist.dir}/org.forzaframework.core.hibernate.jar"/>
                <pathelement path="${dist.dir}/org.forzaframework.security.jar"/>
            </classpath>
        </javac>
        <copy todir="${build.dir}/${taglib.src.dir}/META-INF" flatten="true">
            <fileset dir="${taglib.src.dir}" includes="**/*.xml"/>
            <fileset dir="${taglib.src.dir}" includes="**/*.properties"/>
            <fileset dir="${taglib.src.dir}" includes="**/*.tld"/>
        </copy>
        <jar destfile="${dist.dir}/org.forzaframework.taglib.jar" basedir="${build.dir}/${taglib.src.dir}"/>
    </target>

    <target name="dist">
        <zip destfile="../forzaframework.zip" basedir="." excludes="lib/**"/>
        <zip destfile="../forzaframework-with-dependencies.zip" basedir="."/>
    </target>

    <target name="jsdist">
        <mkdir dir="${dist.dir}/js"/>
        <mkdir dir="${dist.dir}/js"/>

        <taskdef name="yui-compressor" classname="net.noha.tools.ant.yuicompressor.tasks.YuiCompressorTask">
            <classpath>
                <pathelement location="lib/yuicompressor-2.4.2.jar" />
                <pathelement location="lib/yui-compressor-ant-task-0.4.jar" />
            </classpath>
        </taskdef>

        <concat destfile="${dist.dir}/js/next-debug.js" >
            <filelist files="${coreweb.src.dir}/resources/javascript/next.js" />
            <filelist files="${coreweb.src.dir}/resources/javascript/ux.js" />
        </concat>

        <yui-compressor warn="false" charset="UTF-8" munge="true" jssuffix="-min.js" fromdir="${dist.dir}/js" todir="${dist.dir}/js">
           <include name="next-debug.js"/>
        </yui-compressor>

        <rename src="${dist.dir}/js/next-debug-min.js" dest="${dist.dir}/js/next.js"/>
    </target>

    <target name="create" depends="compile">
        <input message="Project Short Name (testproject):" addproperty="project.name"/>
        <input message="Project Long Name (Test Project):" addproperty="project.publicName"/>
        <input message="Root Package (com.test.project):" addproperty="root.package"/>
        <input message="Root Package (com/test/project):" addproperty="root.folder"/>

        <tstamp>
            <format property="current.date" pattern="yyyy/dd/MM"/> 
        </tstamp>
        <tstamp>
            <format property="current.time" pattern="HH:mm:ss"/> 
        </tstamp>

        <copy todir="../${project.name}">
            <fileset dir="appgen/templates/project"/>
        </copy>

        <copy todir="../${project.name}/lib">
            <fileset file="${dist.dir}/org.forzaframework.core.jar"/>
            <fileset file="${dist.dir}/org.forzaframework.core.hibernate.jar"/>
            <fileset file="${dist.dir}/org.forzaframework.security.jar"/>
            <fileset file="${dist.dir}/org.forzaframework.taglib.jar"/>
            <fileset file="${dist.dir}/org.forzaframework.web.jar"/>
            <fileset file="lib/commons-beanutils.jar"/>
            <fileset file="lib/ezmorph-0.8.1.jar"/>
            <fileset file="lib/json-lib-2.0-jdk15.jar"/>
        </copy>

        <mkdir dir="../${project.name}/src/main/java/${root.folder}"/>

        <move file="../${project.name}/src/main/java/web" tofile="../${project.name}/src/main/java/${root.folder}/web"/>

        <replace dir="../${project.name}" value="${project.name}">
            <include name="**/*"/>
            <replacetoken>${project.name}</replacetoken>
        </replace>
        <replace dir="../${project.name}" value="${project.publicName}">
            <include name="**/*"/>
            <replacetoken>${project.publicName}</replacetoken>
        </replace>
        <replace dir="../${project.name}" value="${current.date}">
            <include name="**/*"/>
            <replacetoken>${current.date}</replacetoken>
        </replace>
        <replace dir="../${project.name}" value="${current.time}">
            <include name="**/*"/>
            <replacetoken>${current.time}</replacetoken>
        </replace>
        <replace dir="../${project.name}" value="${user.name}">
            <include name="**/*"/>
            <replacetoken>${user.name}</replacetoken>
        </replace>
        <replace dir="../${project.name}" value="${root.package}">
            <include name="**/*"/>
            <replacetoken>${root.package}</replacetoken>
        </replace>
        <move file="../${project.name}/$${project.name}.ipr" tofile="../${project.name}/${project.name}.ipr"/>
        <move file="../${project.name}/$${project.name}.iml" tofile="../${project.name}/${project.name}.iml"/>
    </target>
</project>